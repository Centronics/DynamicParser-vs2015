<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="D:\разработки\DynamicParser\DynamicParser\bin\Debug\DynamicParser.dll">
   <Modules>
    <Module Name="dynamicparser.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Подпишите 'DynamicParser.dll' с использованием ключа строгого имени.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Пометьте 'DynamicParser.dll' как CLSCompliant(true), поскольку он предоставляет типы, видимые извне.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="DynamicParser">
       <Types>
        <Type Name="Processor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(DynamicProcessor.SignValue[,],System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="65">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(SignValue[,], string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="69">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(SignValue[,], string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="73">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(SignValue[,], string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="78">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(SignValue[,], string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(DynamicProcessor.SignValue[],System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="94">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(SignValue[], string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="97">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(SignValue[], string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="102">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(SignValue[], string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Drawing.Bitmap,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="37">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Bitmap, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="40">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Bitmap, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="44">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Bitmap, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="49">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Bitmap, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="123">'Processor.Processor(Stream)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="131">'Processor.Processor(Stream)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="139">'Processor.Processor(Stream)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="148">'Processor.Processor(Stream)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="159">'Processor.Processor(Stream)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="152">Метод 'Processor.Processor(Stream)' передает "Tag" в качестве аргумента 'paramName' в конструктор 'ArgumentNullException'. Замените этот аргумент одним из имен параметров метода. Заметьте, что предоставленное имя параметра должно использовать те же прописные и строчные буквы, как объявлено в методе.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="135">Метод 'Processor.Processor(Stream)' передает "height" в качестве аргумента 'paramName' в конструктор 'ArgumentOutOfRangeException'. Замените этот аргумент одним из имен параметров метода. Заметьте, что предоставленное имя параметра должно использовать те же прописные и строчные буквы, как объявлено в методе.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="143">Метод 'Processor.Processor(Stream)' передает "tagLength" в качестве аргумента 'paramName' в конструктор 'ArgumentOutOfRangeException'. Замените этот аргумент одним из имен параметров метода. Заметьте, что предоставленное имя параметра должно использовать те же прописные и строчные буквы, как объявлено в методе.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="127">Метод 'Processor.Processor(Stream)' передает "width" в качестве аргумента 'paramName' в конструктор 'ArgumentOutOfRangeException'. Замените этот аргумент одним из имен параметров метода. Заметьте, что предоставленное имя параметра должно использовать те же прописные и строчные буквы, как объявлено в методе.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="116">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="118">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="123">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="127">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="131">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="135">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="139">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="152">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="159">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="143">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="148">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Processor(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_bitmap" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'Processor._bitmap' является многомерным массивом. Замените его массивом массивов, если возможно.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEqual(DynamicParser.ProcessorContainer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="399">'Processor.GetEqual(ProcessorContainer)' имеет сложность организации циклов 49. Напишите заново или реструктурируйте метод, чтобы уменьшить сложность до 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="399">'Processor.GetEqual(ProcessorContainer)' имеет индекс удобства поддержки 17. Напишите заново или реструктурируйте метод, чтобы увеличить индекс удобства поддержки (ИУП). ИУП ниже 10 указывает на неудобство поддержки, ИУП между 10 и 20 указывает на среднее удобство поддержки, а ИУП выше 20 указывает на высокое удобство поддержки.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="444">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="455">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="463">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="473">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="482">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="491">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="522">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="534">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="542">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="553">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="562">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="572">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="588">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="597">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="605">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="613">Измените 'Processor.GetEqual(ProcessorContainer)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="621">'Processor.GetEqual(ProcessorContainer)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="430">'Processor.GetEqual(ProcessorContainer)' использует многомерный массив из 'SignValue[,]'. Замените его массивом массивов, если возможно.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="401">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(ProcessorContainer)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="411">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(ProcessorContainer)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="403">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(ProcessorContainer)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="407">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(ProcessorContainer)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="621">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(ProcessorContainer)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="CS$&lt;&gt;8__locals1" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="421">Переменная 'CS$&lt;&gt;8__locals1', объявленная в 'Processor.GetEqual(ProcessorContainer)', и поле экземпляра типа имеют одно и то же имя. Измените имя одного из этих элементов.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEqual(System.Collections.Generic.IList`1&lt;DynamicParser.ProcessorContainer&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="358">Измените 'Processor.GetEqual(IList&lt;ProcessorContainer&gt;)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="366">Измените 'Processor.GetEqual(IList&lt;ProcessorContainer&gt;)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="374">'Processor.GetEqual(IList&lt;ProcessorContainer&gt;)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="345">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(IList&lt;ProcessorContainer&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="348">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(IList&lt;ProcessorContainer&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="374">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetEqual(IList&lt;ProcessorContainer&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMinIndex(DynamicProcessor.SignValue[,][],System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="0#" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="279">'db' является многомерным массивом. Замените его массивом массивов, если возможно.</Issue>
             <Issue Certainty="25" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="300">'t' является многомерным массивом. Замените его массивом массивов, если возможно.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="288">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetMinIndex(SignValue[][,], int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="279">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetMinIndex(SignValue[][,], int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="282">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetMinIndex(SignValue[][,], int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="285">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetMinIndex(SignValue[][,], int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="290">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.GetMinIndex(SignValue[][,], int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int32,System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="196">В методе 'Processor.this[int, int]' подберите более значимое имя для параметра 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="196">В методе 'Processor.this[int, int]' подберите более значимое имя для параметра 'y'.</Issue>
            </Message>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="196">Повторно спроектируйте индексатор 'Processor.this[int, int]' так, чтобы в качестве его индекса использовалось единственное строковое или целое значение.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Serialize(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Processor.cs" Line="210">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Processor.Serialize(Stream)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProcessorContainer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Add(DynamicParser.Processor)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="114">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.Add(Processor)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="124">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.Add(Processor)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="116">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.Add(Processor)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="120">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.Add(Processor)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ArgumentAssertions(System.Collections.Generic.IList`1&lt;DynamicParser.Processor&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="83">Параметр "this" ("Me" в Visual Basic) никогда не используется в 'ProcessorContainer.ArgumentAssertions(IList&lt;Processor&gt;)'. Пометьте член как static (или Shared в среде Visual Basic) либо используйте "this" или "Me" в теле метода или хотя бы в одном методе доступа к свойству.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="85">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.ArgumentAssertions(IList&lt;Processor&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="88">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.ArgumentAssertions(IList&lt;Processor&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="91">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.ArgumentAssertions(IList&lt;Processor&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="94">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.ArgumentAssertions(IList&lt;Processor&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="98">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.ArgumentAssertions(IList&lt;Processor&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="101">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.ArgumentAssertions(IList&lt;Processor&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNull(System.Collections.Generic.ICollection`1&lt;DynamicParser.Processor&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="227">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.IsNull(ICollection&lt;Processor&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TagStringCompare(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="280">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.TagStringCompare(string, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="287">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.TagStringCompare(string, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="283">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.TagStringCompare(string, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="290">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'ProcessorContainer.TagStringCompare(string, string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="282">Замените вызов 'string.operator ==(string, string)' в 'ProcessorContainer.TagStringCompare(string, string)' вызовом "String.IsNullOrEmpty".</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="ProcessorContainer.cs" Line="289">Замените вызов 'string.operator ==(string, string)' в 'ProcessorContainer.TagStringCompare(string, string)' вызовом "String.IsNullOrEmpty".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProcPerc" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'ProcPerc' должен переопределить метод Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'ProcPerc' должен переопределить операторы равенства (==) и неравенства (!=).</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Percent" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Так как поле 'ProcPerc.Percent' является видимым извне объявляющего его типа, необходимо изменить уровень доступа на частный и добавить свойство, имеющее тот же уровень доступа, что и поле, чтобы обеспечить доступ к нему.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Position" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Так как поле 'ProcPerc.Position' является видимым извне объявляющего его типа, необходимо изменить уровень доступа на частный и добавить свойство, имеющее тот же уровень доступа, что и поле, чтобы обеспечить доступ к нему.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Procs" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Так как поле 'ProcPerc.Procs' является видимым извне объявляющего его типа, необходимо изменить уровень доступа на частный и добавить свойство, имеющее тот же уровень доступа, что и поле, чтобы обеспечить доступ к нему.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reg" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'Reg' должен переопределить метод Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'Reg' должен переопределить операторы равенства (==) и неравенства (!=).</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Percent" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Так как поле 'Reg.Percent' является видимым извне объявляющего его типа, необходимо изменить уровень доступа на частный и добавить свойство, имеющее тот же уровень доступа, что и поле, чтобы обеспечить доступ к нему.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedProcessor" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Так как поле 'Reg.SelectedProcessor' является видимым извне объявляющего его типа, необходимо изменить уровень доступа на частный и добавить свойство, имеющее тот же уровень доступа, что и поле, чтобы обеспечить доступ к нему.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Region" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="80">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Region(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="83">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Region(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Add(System.Drawing.Rectangle,DynamicParser.Processor,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="214">Замените метод 'Region.Add(Rectangle, Processor, double)' его перегрузкой, предоставляющей все аргументы по умолчанию.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="224">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Add(Rectangle, Processor, double)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="216">В связи с тем, что поведение 'string.Format(string, params object[])' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Add(Rectangle, Processor, double)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="220">В связи с тем, что поведение 'string.Format(string, params object[])' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Add(Rectangle, Processor, double)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Add(System.Int32,System.Int32,System.Int32,System.Int32,DynamicParser.Processor,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="249">Замените метод 'Region.Add(int, int, int, int, Processor, double)' его перегрузкой, предоставляющей все аргументы по умолчанию.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="249">В методе 'Region.Add(int, int, int, int, Processor, double)' подберите более значимое имя для параметра 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="249">В методе 'Region.Add(int, int, int, int, Processor, double)' подберите более значимое имя для параметра 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Contains(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="193">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Contains(string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="196">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Contains(string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="199">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.Contains(string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="195">Замените вызов 'string.operator ==(string, string)' в 'Region.Contains(string, int)' вызовом "String.IsNullOrEmpty".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndex(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="154">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.GetIndex(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="157">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.GetIndex(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="160">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.GetIndex(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="163">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.GetIndex(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Drawing.Point]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="119">Используйте значение целого или строкового типа в качестве параметра индексатора 'Region.this[Point]'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int32,System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="130">В методе 'Region.this[int, int]' подберите более значимое имя для параметра 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="130">В методе 'Region.this[int, int]' подберите более значимое имя для параметра 'y'.</Issue>
            </Message>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="130">Повторно спроектируйте индексатор 'Region.this[int, int]' так, чтобы в качестве его индекса использовалось единственное строковое или целое значение.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="132">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.this.get(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="134">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.this.get(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="136">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.this.get(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="139">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'Region.this.get(int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Remove(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="259">В методе 'Region.Remove(int, int)' подберите более значимое имя для параметра 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="259">В методе 'Region.Remove(int, int)' подберите более значимое имя для параметра 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Registered" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#X" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="32">Подберите более значимое имя для члена 'Registered.X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="Region.cs" Line="37">Подберите более значимое имя для члена 'Registered.Y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SearchResults" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="115">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.SearchResults(int, int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="118">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.SearchResults(int, int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="121">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.SearchResults(int, int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="124">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.SearchResults(int, int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="127">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.SearchResults(int, int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="131">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.SearchResults(int, int, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_coords" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'SearchResults._coords' является многомерным массивом. Замените его массивом массивов, если возможно.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeCount(System.Collections.Generic.IList`1&lt;System.Int32&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="475">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.ChangeCount(IList&lt;int&gt;, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="478">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.ChangeCount(IList&lt;int&gt;, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="482">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.ChangeCount(IList&lt;int&gt;, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Find(System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="502">Измените 'List&lt;ProcPerc&gt;' в 'SearchResults.Find(Rectangle)' так, чтобы использовать Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; или KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="506">Метод 'SearchResults.Find(Rectangle)' передает "Height" в качестве аргумента 'paramName' в конструктор 'ArgumentException'. Замените этот аргумент одним из имен параметров метода. Заметьте, что предоставленное имя параметра должно использовать те же прописные и строчные буквы, как объявлено в методе.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="504">Метод 'SearchResults.Find(Rectangle)' передает "Width" в качестве аргумента 'paramName' в конструктор 'ArgumentException'. Замените этот аргумент одним из имен параметров метода. Заметьте, что предоставленное имя параметра должно использовать те же прописные и строчные буквы, как объявлено в методе.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="504">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.Find(Rectangle)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="506">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.Find(Rectangle)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindRelation(System.Collections.Generic.IList`1&lt;System.String&gt;,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="237">Замените метод 'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' его перегрузкой, предоставляющей все аргументы по умолчанию.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="270">Измените 'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="278">Измените 'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' так, чтобы перехватывались более специфические, чем 'Exception', исключения, либо обеспечьте повторное порождение исключения.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="286">'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' создает исключение типа 'Exception', тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="239">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="242">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="245">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="286">В связи с тем, что поведение 'string.Format(string, object, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(IList&lt;string&gt;, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindRelation(System.Collections.ICollection,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="209">Замените метод 'SearchResults.FindRelation(ICollection, int, int)' его перегрузкой, предоставляющей все аргументы по умолчанию.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="211">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(ICollection, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="213">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(ICollection, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="216">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(ICollection, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindRelation(System.String,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="300">Замените метод 'SearchResults.FindRelation(string, int, int)' его перегрузкой, предоставляющей все аргументы по умолчанию.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="302">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(string, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="305">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(string, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="308">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(string, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="314">В связи с тем, что поведение 'string.Format(string, params object[])' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindRelation(string, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindSymbols(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="435">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindSymbols(string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="437">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindSymbols(string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="441">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindSymbols(string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="436">Замените вызов 'string.operator ==(string, string)' в 'SearchResults.FindSymbols(string, int)' вызовом "String.IsNullOrEmpty".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindWord(System.Collections.Generic.IList`1&lt;DynamicParser.Reg&gt;,System.Int32,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="354">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindWord(IList&lt;Reg&gt;, int, string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="357">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindWord(IList&lt;Reg&gt;, int, string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="360">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindWord(IList&lt;Reg&gt;, int, string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="364">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.FindWord(IList&lt;Reg&gt;, int, string, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStringFromRegion(DynamicParser.Region,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="411">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.GetStringFromRegion(Region, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="413">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.GetStringFromRegion(Region, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="416">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'SearchResults.GetStringFromRegion(Region, int, int)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int32,System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="177">В методе 'SearchResults.this[int, int]' подберите более значимое имя для параметра 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="177">В методе 'SearchResults.this[int, int]' подберите более значимое имя для параметра 'y'.</Issue>
            </Message>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="SearchResults.cs" Line="177">Повторно спроектируйте индексатор 'SearchResults.this[int, int]' так, чтобы в качестве его индекса использовалось единственное строковое или целое значение.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TagSearcher" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="TagSearcher.cs" Line="28">В связи с тем, что поведение 'string.ToUpper()' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'TagSearcher.TagSearcher(string)' вызовом 'string.ToUpper(CultureInfo)'. Если результат 'string.ToUpper(CultureInfo)' будет показан пользователю, укажите CultureInfo.CurrentCulture в качестве параметра CultureInfo. В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать CultureInfo.InvariantCulture.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="TagSearcher.cs" Line="24">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'TagSearcher.TagSearcher(string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="TagSearcher.cs" Line="26">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'TagSearcher.TagSearcher(string)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\разработки\DynamicParser\DynamicParser" File="TagSearcher.cs" Line="25">Замените вызов 'string.operator ==(string, string)' в 'TagSearcher.TagSearcher(string)' вызовом "String.IsNullOrEmpty".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCount(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="TagSearcher.cs" Line="68">В связи с тем, что поведение 'string.ToUpper()' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'TagSearcher.GetCount(string)' вызовом 'string.ToUpper(CultureInfo)'. Если результат 'string.ToUpper(CultureInfo)' будет показан пользователю, укажите CultureInfo.CurrentCulture в качестве параметра CultureInfo. В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать CultureInfo.InvariantCulture.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WordSearcher" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.IList`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="WordSearcher.cs" Line="27">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'WordSearcher.WordSearcher(IList&lt;string&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeCount(System.Int32[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="WordSearcher.cs" Line="75">В связи с тем, что поведение 'string.Format(string, object, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'WordSearcher.ChangeCount(int[])' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWord(System.Collections.Generic.IList`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-02-26 19:51:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="WordSearcher.cs" Line="97">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'WordSearcher.GetWord(IList&lt;int&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\разработки\DynamicParser\DynamicParser" File="WordSearcher.cs" Line="99">В связи с тем, что поведение 'string.Format(string, object)' может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в 'WordSearcher.GetWord(IList&lt;int&gt;)' вызовом 'string.Format(IFormatProvider, string, params object[])'. Если результат 'string.Format(IFormatProvider, string, params object[])' базируется на пользовательском вводе, укажите 'CultureInfo.CurrentCulture' в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Сборки должны иметь допустимые строгие имена</Name>
   <Description>Либо строгое имя у сборки отсутствует или недействительно, либо действительность строгого имени зависит от конфигурации компьютера. В этом состоянии не следует выполнять развертывание сборки. Наиболее общие причины этого: 1). После подписания содержимое сборки было изменено. 2). Сбой в процессе подписания. 3). Сборка была подписана с задержкой. 4). В реестре существует раздел, разрешивший успешное выполнение проверки (чего не было бы в противном случае).</Description>
   <Resolution Name="NoStrongName">Подпишите {0} с использованием ключа строгого имени.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Избегайте чрезмерной сложности</Name>
   <Description>Реализации излишне сложных методов усложняют понимание и поддержку кода.</Description>
   <Resolution Name="Default">{0} имеет сложность организации циклов {1}. Напишите заново или реструктурируйте метод, чтобы уменьшить сложность до {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505">
   <Name>Избегайте кода, неудобного для поддержки</Name>
   <Description>Типы и методы с высокой степенью взаимозависимости классов, сложностью организации циклов или большой длиной программы могут затруднить поддержку.</Description>
   <Resolution Name="Method">{0} имеет индекс удобства поддержки {1}. Напишите заново или реструктурируйте метод, чтобы увеличить индекс удобства поддержки (ИУП). ИУП ниже {2} указывает на неудобство поддержки, ИУП между {2} и {3} указывает на среднее удобство поддержки, а ИУП выше {3} указывает на высокое удобство поддержки.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386043.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Не следует использовать параметры по умолчанию</Name>
   <Description>Некоторые языки программирования не поддерживают параметры по умолчанию. Замените параметры по умолчанию перегрузкой методов, предоставляющих аргумент по умолчанию.</Description>
   <Resolution Name="Default">Замените метод {0} его перегрузкой, предоставляющей все аргументы по умолчанию.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Не перехватывайте типы общих исключений</Name>
   <Description>Не следует перехватывать исключения типа Exception или SystemException. Перехватывание исключений общего назначения может скрыть от пользователя библиотеки ошибки времени выполнения и осложнить процесс отладки. Перехватывать следует только те исключения, которые вы можете правильно обработать.</Description>
   <Resolution Name="Default">Измените {0} так, чтобы перехватывались более специфические, чем {1}, исключения, либо обеспечьте повторное порождение исключения.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Не объявляйте видимые поля экземпляров</Name>
   <Description>Поля экземпляров, видимые вне типа, в котором они объявлены, ограничивают возможность изменения сведений о реализации, относящихся к этим элементам данных. Вместо этого используйте свойства. Они не влияют на удобство использования или производительность, но обеспечивают гибкость, скрывая сведения о реализации для используемых данных.</Description>
   <Resolution Name="Default">Так как поле {0} является видимым извне объявляющего его типа, необходимо изменить уровень доступа на частный и добавить свойство, имеющее тот же уровень доступа, что и поле, чтобы обеспечить доступ к нему.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Не предоставляйте универсальные списки</Name>
   <Description>Не предоставляйте List&lt;T&gt; в объектных моделях. Вместо этого используйте Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; или KeyedCollection&lt;K,V&gt;. List&lt;T&gt; предназначен для использования из реализации, но не в API объектной модели. List&lt;T&gt; оптимизирован с точки зрения производительности, но за счет более длительного отслеживания версий. Например, если вы возвратите List&lt;T&gt; в клиентский код, то никогда не сможете получить уведомление, когда клиентский код изменит коллекцию.</Description>
   <Resolution Name="Default">Измените {0} в {1} так, чтобы использовать Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; или KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Не порождайте исключения зарезервированных типов</Name>
   <Description>Пользовательский код не должен создавать и вызывать исключения определенных типов, которые зарезервированы для времени выполнения или являются типом слишком общего исключения. Типы исключений, являющиеся слишком общими, включают Exception, SystemException и ApplicationException. Типы исключений, зарезервированные для времени выполнения, включают ThreadAbortException, OutOfMemoryException, ExecutionEngineException и IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} создает исключение типа {1}, тип исключения, который не является достаточно определенным и никогда не должен вызываться пользовательским кодом. Если экземпляр этого исключения может быть порожден, используйте другой тип исключения.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Идентификаторы должны иметь правильное правописание</Name>
   <Description>Отдельные слова, составляющие идентификатор, не должны быть сокращены и должны быть написаны без орфографических ошибок. Если это правило создает ложный положительный результат для термина, который должен распознаваться, добавьте термин в пользовательский словарь FxCop.</Description>
   <Resolution Name="MemberMoreMeaningfulName">Подберите более значимое имя для члена {0}.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">В методе {0} подберите более значимое имя для параметра {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023">
   <Name>Индексы не должны быть многомерными</Name>
   <Description>Индексаторы (индексированные свойства) должны использовать один параметр (тип которого - либо целое число, либо строка) для индексации значений. Многомерные индексаторы могут существенно снизить удобство использования библиотеки. Например, public object this [int index1, int index2] не является интуитивно понятным индексатором.</Description>
   <Resolution Name="Default">Повторно спроектируйте индексатор {0} так, чтобы в качестве его индекса использовалось единственное строковое или целое значение.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182152.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Правильно создавайте экземпляры исключений аргументов</Name>
   <Description>Строковые аргументы, передаваемые конструкторам ArgumentException и производных типов, должны быть правильными. Типы, производные от ArgumentException, имеют несовместимые перегрузки конструктора в отношении сообщению и параметрам paramName по сравнению с ArgumentException.</Description>
   <Resolution Name="IncorrectParameterName">Метод {0} передает "{1}" в качестве аргумента {2} в конструктор {3}. Замените этот аргумент одним из имен параметров метода. Заметьте, что предоставленное имя параметра должно использовать те же прописные и строчные буквы, как объявлено в методе.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Пометьте сборки атрибутом CLSCompliantAttribute</Name>
   <Description>Сборки должны явно объявлять о своей CLS-совместимости при помощи атрибута CLSCompliant. Сборка без этого атрибута не является CLS-совместимой. Сборки, модули и типы могут быть CLS-совместимыми, даже если некоторые их части не являются CLS-совместимыми. Применимы следующие правила: 1). Если элемент помечен как CLSCompliant, все его несовместимые члены должны иметь атрибут CLSCompliant, аргументу которого установлено значение False. 2). Каждый CLS-несовместимый член должен быть дополнен сравнимым CLS-совместимым альтернативным членом.</Description>
   <Resolution Name="Default">Пометьте {0} как CLSCompliant(true), поскольку он предоставляет типы, видимые извне.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Пометьте члены как статические</Name>
   <Description>Методы, которые не обращаются к данным экземпляров и не вызывают методы экземпляров, могут быть определены как статические (Shared в Visual Basic). После этого компилятор создаст невиртуальные места для вызова этих членов, что предотвратит во время выполнения проверку для каждого вызова, что текущий указатель на объект не имеет значения NULL. Это может привести к ощутимому росту производительности для требовательных к производительности кодов. В некоторых случаях ошибка доступа к текущему экземпляру объекта указывает на проблемы с правильностью кода.</Description>
   <Resolution Name="Default">Параметр "this" ("Me" в Visual Basic) никогда не используется в {0}. Пометьте член как static (или Shared в среде Visual Basic) либо используйте "this" или "Me" в теле метода или хотя бы в одном методе доступа к свойству.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Переопределяйте операторы Equals и равенства для типов значений</Name>
   <Description>Заданная по умолчанию реализация System.ValueType может не выполняться так же, как заданная пользователем реализация.</Description>
   <Resolution Name="Equals">{0} должен переопределить метод Equals.</Resolution>
   <Resolution Name="op_Equality">{0} должен переопределить операторы равенства (==) и неравенства (!=).</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814">
   <Name>Используйте массивы массивов вместо многомерных массивов</Name>
   <Description>Многомерность массивов может отрицательно влиять на производительность. Используйте массив массивов, если возможно.</Description>
   <Resolution Name="Body">{0} использует многомерный массив из {1}. Замените его массивом массивов, если возможно.</Resolution>
   <Resolution Name="Default">{0} является многомерным массивом. Замените его массивом массивов, если возможно.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182277.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Указывайте CultureInfo</Name>
   <Description>Если существует перегрузка, которая принимает аргумент CultureInfo, следует всегда вызывать ее, а не другую перегрузку, не принимающую этот аргумент. Тип CultureInfo содержит сведения о языке и региональных настройках, необходимые для осуществления операций с числами и строками, таких как расстановка заглавных букв, форматирование и сравнение строк. В сценариях, в которых поведение при преобразовании и обработке не зависит от языка и региональных настроек, следует указать CultureInfo.InvariantCulture, в ином случае следует указывать CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">В связи с тем, что поведение {0} может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в {1} вызовом {2}. Если результат {2} будет показан пользователю, укажите CultureInfo.CurrentCulture в качестве параметра CultureInfo. В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать CultureInfo.InvariantCulture.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Указывайте IFormatProvider</Name>
   <Description>Если существует перегрузка, которая принимает аргумент IFormatProvider, следует всегда вызывать ее, а не другую перегрузку, не принимающую этот аргумент. Некоторые методы во время выполнения преобразовывают значение в представление строки или из него. Они принимают строковый параметр, который содержит один или несколько знаков, которые называются спецификаторами формата и указывают, как следует преобразовывать значение. Если смысл спецификатора формата зависит от языка и региональных настроек, форматируемый объект предоставляет действительные символы, которые используются в представлении строки. В сценариях, в которых поведение при сортировке и сравнении не зависит от языка и региональных настроек, следует указать CultureInfo.InvariantCulture, в ином случае следует указывать CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">В связи с тем, что поведение {0} может изменяться в зависимости от языка и региональных настроек текущего пользователя, следует заменить этот вызов в {1} вызовом {2}. Если результат {2} базируется на пользовательском вводе, укажите {3} в качестве параметра "IformatProvider". В ином случае, если результат будет храниться и использоваться программой, например при сохранении на диск или в базу данных, следует указать {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Проверяйте наличие пустых строк, используя длину строки</Name>
   <Description>Для определения пустой строки проверьте, равно ли ее свойство String.Length нулю. Использование таких конструкций, как ".Equals(строка) и String.Empty.Equals(строка) менее эффективно, чем проверка длины строки. Замените их проверками "Строка".Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Замените вызов {0} в {1} вызовом "String.IsNullOrEmpty".</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043">
   <Name>Используйте целый или строковый аргумент для индексаторов</Name>
   <Description>Индексаторы (индексированные свойства) должны использовать типы integer или string для индексирования значений. Эти типы просты в использовании и часто используются для индексирования структур данных; использование других типов может привести к существенному снижению удобства использования библиотеки. Например, public char this [int index] является сигнатурой C# для индексаторов типа string.</Description>
   <Resolution Name="Default">Используйте значение целого или строкового типа в качестве параметра индексатора {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182180.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Имена переменных не должны совпадать с именами полей</Name>
   <Description>Имена полей экземпляра и имена переменных не должны совпадать внутри одной области.</Description>
   <Resolution Name="Local">Переменная {0}, объявленная в {1}, и поле экземпляра типа имеют одно и то же имя. Измените имя одного из этих элементов.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Категория</String>
  <String Key="Certainty">Достоверность</String>
  <String Key="CollapseAll">Свернуть все</String>
  <String Key="CheckId">ИД проверки</String>
  <String Key="Error">Ошибка</String>
  <String Key="Errors">ошибки</String>
  <String Key="ExpandAll">Развернуть все</String>
  <String Key="Help">Справка</String>
  <String Key="Line">Строка</String>
  <String Key="Messages">сообщения</String>
  <String Key="LocationNotStoredInPdb">[расположение не сохранено в PDB]</String>
  <String Key="Project">Проект</String>
  <String Key="Resolution">Разрешение</String>
  <String Key="Rule">Правило</String>
  <String Key="RuleFile">Файл правил</String>
  <String Key="RuleDescription">Описание правила</String>
  <String Key="Source">Источник</String>
  <String Key="Status">Состояние</String>
  <String Key="Target">Цель</String>
  <String Key="Warning">Предупреждение</String>
  <String Key="Warnings">предупреждения</String>
  <String Key="ReportTitle">Отчет по анализу кода</String>
 </Localized>
</FxCopReport>
