<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamicParser</name>
    </assembly>
    <members>
        <member name="T:DynamicParser.Processor">
            <summary>
                Процессор (одновременно являющийся картой), выполняющий поиск указанных карт на рабочем поле.
                Работает по принципу поисковика наиболее подходящей карты в каждой точке рабочего поля.
            </summary>
        </member>
        <member name="F:DynamicParser.Processor.DiffEqual">
            <summary>
                Разница между процентами соответствия объектов, которая позволяет считать их равными.
            </summary>
        </member>
        <member name="F:DynamicParser.Processor._bitmap">
            <summary>
                Рабочее поле, на котором производится поиск указанных карт.
            </summary>
        </member>
        <member name="M:DynamicParser.Processor.#ctor(System.Drawing.Bitmap,System.String)">
            <summary>
                Предназначен для загрузки изображения как рабочего поля.
            </summary>
            <param name="btm">Загружаемое изображение.</param>
            <param name="tag">Название изображения.</param>
        </member>
        <member name="M:DynamicParser.Processor.#ctor(DynamicProcessor.SignValue[0:,0:],System.String)">
            <summary>
                Загружает указанную карту, создавая внутреннюю её копию.
            </summary>
            <param name="btm">Загружаемая карта.</param>
            <param name="tag">Название карты.</param>
        </member>
        <member name="M:DynamicParser.Processor.#ctor(DynamicProcessor.SignValue[],System.String)">
            <summary>
                Загружает указанный массив, создавая внутреннюю его копию.
            </summary>
            <param name="btm">Загружаемый массив.</param>
            <param name="tag">Название карты.</param>
        </member>
        <member name="M:DynamicParser.Processor.#ctor(System.IO.Stream)">
            <summary>
                Десериализует экземпляр класса из указанного потока.
            </summary>
            <param name="stream">Поток для десериализации.</param>
        </member>
        <member name="P:DynamicParser.Processor.Tag">
            <summary>
                Название текущей карты.
            </summary>
        </member>
        <member name="P:DynamicParser.Processor.Width">
            <summary>
                Ширина текущего рабочего поля.
            </summary>
        </member>
        <member name="P:DynamicParser.Processor.Height">
            <summary>
                Высота текущего рабочего поля.
            </summary>
        </member>
        <member name="P:DynamicParser.Processor.Length">
            <summary>
                Длина. Вычисляется как: Width * Height.
            </summary>
        </member>
        <member name="P:DynamicParser.Processor.Size">
            <summary>
                Получает размер карты.
            </summary>
        </member>
        <member name="P:DynamicParser.Processor.Item(System.Int32,System.Int32)">
            <summary>
                Получает объект рабочего поля.
            </summary>
            <param name="x">Координата X рабочего поля.</param>
            <param name="y">Координата Y рабочего поля.</param>
            <returns>Возвращает объект рабочего поля по указанным координатам.</returns>
        </member>
        <member name="P:DynamicParser.Processor.CurrentRegion">
            <summary>
                Генерирует регион, равный по размеру текущему рабочему полю.
            </summary>
        </member>
        <member name="M:DynamicParser.Processor.Serialize(System.IO.Stream)">
            <summary>
                Сериализует текущий экземпляр в указанный поток.
            </summary>
            <param name="stream">Поток для сериализации.</param>
        </member>
        <member name="M:DynamicParser.Processor.GetProcessorName(System.Int32,System.Int32)">
            <summary>
                Получает строку, представляющую подстроку поля <see cref="P:DynamicParser.Processor.Tag" /> текущей карты или null в случае недопустимых
                значений для названия текущей карты.
            </summary>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <param name="count">Количество символов в строке названия карты.</param>
            <returns>Возвращает строку, представляющую подстроку поля <see cref="P:DynamicParser.Processor.Tag" /> текущей карты.</returns>
        </member>
        <member name="M:DynamicParser.Processor.IsProcessorName(System.String,System.Int32)">
            <summary>
                Проверяет, является ли заданное имя именем текущей карты. Проверка производится без учёта регистра.
            </summary>
            <param name="name">Проверяемое имя.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <returns>Возвращает значение true, если указанное имя соответствует имени карты, в противном случае - false.</returns>
        </member>
        <member name="M:DynamicParser.Processor.ToString">
            <summary>
                Получает строковое представление текущего экземпляра, которое является значением свойства <see cref="P:DynamicParser.Processor.Tag" />.
            </summary>
            <returns>
                Возвращает строковое представление текущего экземпляра, которое является значением свойства <see cref="P:DynamicParser.Processor.Tag" />.
            </returns>
        </member>
        <member name="M:DynamicParser.Processor.GetMinIndex(DynamicProcessor.SignValue[0:,0:][],System.Int32,System.Int32,System.Int32)">
            <summary>
                Подтверждает, является ли карта с указанным индексом наиболее подходящей в данной точке.
            </summary>
            <param name="db">Массив карт для поиска.</param>
            <param name="x">Координата X.</param>
            <param name="y">Координата Y.</param>
            <param name="number">Индекс карты, который требуется проверить.</param>
            <returns>Возвращает true в случае, если number входит в список наиболее подходящих карт.</returns>
        </member>
        <member name="M:DynamicParser.Processor.GetMaxIndex(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
                Находит все карты, которые имеют тот же процент соответствия, что и заданный.
            </summary>
            <param name="lst">Список процентного соответствия карт.</param>
            <param name="perc">Искомый процент соответствия.</param>
            <returns>
                Возвращает индексы карт, которые имеют тот же процент соответствия.
                Индексы соответствуют поисковому массиву.
            </returns>
        </member>
        <member name="M:DynamicParser.Processor.GetEqual(DynamicParser.Processor[])">
            <summary>
                Находит соответствие между заданными картами и рабочей областью, производя поиск по ней.
            </summary>
            <param name="processors">Исследуемые карты.</param>
            <returns>Возвращает <see cref="T:DynamicParser.SearchResults" />, содержащий поле с результатами поиска.</returns>
        </member>
        <member name="M:DynamicParser.Processor.GetEqual(System.Collections.Generic.IList{DynamicParser.ProcessorContainer})">
            <summary>
                Находит соответствие между заданным массивом карт и рабочей областью в многопоточном режиме.
            </summary>
            <param name="processors">Массив искомых карт.</param>
            <returns>
                Возвращает массив <see cref="T:DynamicParser.SearchResults" />, в котором номер карты в исходном массиве соответствует её
                номеру в массиве результата.
            </returns>
        </member>
        <member name="M:DynamicParser.Processor.GetEqual(DynamicParser.ProcessorContainer[])">
            <summary>
                Находит соответствие между заданным массивом карт и рабочей областью в многопоточном режиме.
            </summary>
            <param name="pc">Массив искомых карт.</param>
            <returns>
                Возвращает массив <see cref="T:DynamicParser.SearchResults" />, в котором номер карты в исходном массиве соответствует её
                номеру в массиве результата.
            </returns>
        </member>
        <member name="M:DynamicParser.Processor.GetEqual(DynamicParser.ProcessorContainer)">
            <summary>
                Производит поиск указанных карт на рабочей области и возвращает результат в виде класса
                <see cref="T:DynamicParser.SearchResults" />,
                содержащего поле с результатами поиска.
            </summary>
            <param name="prc">Массив карт для поиска.</param>
            <returns>Возвращает SearchResults, содержащий поле с результатами поиска.</returns>
        </member>
        <member name="T:DynamicParser.ProcessorContainer">
            <summary>
                Содержит массив карт для поиска. Проверяет их, чтобы все они были одинакового размера.
            </summary>
        </member>
        <member name="F:DynamicParser.ProcessorContainer._lstProcs">
            <summary>
                Содержит добавленные карты.
            </summary>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.#ctor(System.Collections.Generic.IList{DynamicParser.Processor})">
            <summary>
                Инициализирует новый экземпляр хранилища, добавляя в него указанные карты и проверяя их на то, чтобы они были
                одного размера.
            </summary>
            <param name="processors">Добавляемые карты.</param>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.#ctor(DynamicParser.Processor[])">
            <summary>
                Инициализирует новый экземпляр хранилища, добавляя в него указанные карты и проверяя их на то, чтобы они были
                одного размера.
            </summary>
            <param name="processors">Добавляемые карты.</param>
        </member>
        <member name="P:DynamicParser.ProcessorContainer.Item(System.Int32)">
            <summary>
                Получает карту по индексу.
            </summary>
            <param name="index">Индекс карты.</param>
            <returns>Возвращает карту по индексу.</returns>
        </member>
        <member name="P:DynamicParser.ProcessorContainer.Count">
            <summary>
                Получает количество добавленных карт.
            </summary>
        </member>
        <member name="P:DynamicParser.ProcessorContainer.Width">
            <summary>
                Ширина. Вычисляется по первой добавленной карте.
            </summary>
        </member>
        <member name="P:DynamicParser.ProcessorContainer.Height">
            <summary>
                Высота. Вычисляется по первой добавленной карте.
            </summary>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.AddProcessors(System.Collections.Generic.IEnumerable{DynamicParser.Processor})">
            <summary>
                Добавляет карты в коллекцию.
            </summary>
            <param name="processors">Добавляемые карты.</param>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.ArgumentAssertions(System.Collections.Generic.IList{DynamicParser.Processor})">
            <summary>
                Выдаёт исключения в случае обнаружения каких-либо ошибок.
            </summary>
            <param name="processors">Добавляемые карты.</param>
            <returns>
                Возвращает первый процессор в коллекции, который не равен null или null, если таких процессоров в коллекции
                нет.
            </returns>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.Add(DynamicParser.Processor)">
            <summary>
                Добавляет карту в хранилище.
            </summary>
            <param name="proc">Добавляемая карта.</param>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.AddRange(DynamicParser.Processor[])">
            <summary>
                Добавляет коллекцию карт в хранилище.
            </summary>
            <param name="procs">Добавляемая коллекция карт.</param>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.AddRange(System.Collections.Generic.IList{DynamicParser.Processor})">
            <summary>
                Добавляет коллекцию карт в хранилище.
            </summary>
            <param name="procs">Добавляемая коллекция карт.</param>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.IsEquals(System.Collections.Generic.IList{DynamicParser.Processor})">
            <summary>
                Проверяет, присутствуют ли одинаковые ссылки на объекты карт.
            </summary>
            <param name="processors">Проверяемый массив.</param>
            <returns>В случае, когда обнаружены совпадающе ссылки, возвращает true, иначе false.</returns>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.InOneSize(System.Collections.Generic.IList{DynamicParser.Processor})">
            <summary>
                Проверяет, являются ли все указанные карты, картами одного размера.
            </summary>
            <param name="processors">Список проверяемых карт.</param>
            <returns>Возвращает true в случае, если все ли указанные карты одного размера, в противном случае false.</returns>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.FirstInArray(System.Collections.Generic.ICollection{DynamicParser.Processor})">
            <summary>
                Находит первый процессор в коллекции, который не равен null.
            </summary>
            <param name="processors">Коллекция процессоров, в которой производится поиск.</param>
            <returns>
                Возвращает первый процессор в коллекции, который не равен null или null, если таких процессоров в коллекции
                нет.
            </returns>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.IsNull(System.Collections.Generic.ICollection{DynamicParser.Processor})">
            <summary>
                Проверяет, все ли элементы коллекции равны null или отсутствуют.
            </summary>
            <param name="collection">Проверяемая коллекция.</param>
            <returns>
                Возвращает значение true в случае, если все элементы коллекции равны null или отсутствуют, в противном случае
                - false.
            </returns>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.InOneTag(System.Collections.Generic.ICollection{DynamicParser.Processor})">
            <summary>
                Проверяет присутствие карт с одинаковыми значениями свойства <see cref="P:DynamicParser.Processor.Tag" /> в указанном списке.
            </summary>
            <param name="tags">Проверяемый список.</param>
            <returns>Возвращает true в случае, когда повторяющиеся значения отсутствуют, в противном случае false.</returns>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.ContainsTag(System.String)">
            <summary>
                Определяет, существует ли в текущем списке карта с таким же значением свойства <see cref="P:DynamicParser.Processor.Tag" /> или
                нет.
            </summary>
            <param name="tag">Искомый тег.</param>
            <returns>Возвращает true в случае, если карта найдена, в противном случае false.</returns>
        </member>
        <member name="M:DynamicParser.ProcessorContainer.TagStringCompare(System.String,System.String)">
            <summary>
                Сравнивает строки по правилам сравнения свойства <see cref="P:DynamicParser.Processor.Tag" />.
                С обрезанием пробелов и без учёта регистра.
            </summary>
            <param name="tag">Строка, которую надо сравнить.</param>
            <param name="cmp">Строка, с которой надо сравнить.</param>
            <returns>Если строки равны, возвращает true, в противном случае false.</returns>
        </member>
        <member name="T:DynamicParser.Registered">
            <summary>
                Представляет область, которая не пересекается ни с какой другой.
                Хранит наиболее соответствующую найденную карту.
            </summary>
        </member>
        <member name="P:DynamicParser.Registered.Region">
            <summary>
                Область, которая не пересекается ни с какой другой.
            </summary>
        </member>
        <member name="P:DynamicParser.Registered.Register">
            <summary>
                Содержит наиболее соответствующую найденную карту.
            </summary>
        </member>
        <member name="P:DynamicParser.Registered.IsEmpty">
            <summary>
                Возвращает true в случае, если карта отсутствует, в противном случае - false.
            </summary>
        </member>
        <member name="P:DynamicParser.Registered.X">
            <summary>
                Координата X верхнего левого угла области.
            </summary>
        </member>
        <member name="P:DynamicParser.Registered.Y">
            <summary>
                Координата Y верхнего левого угла области.
            </summary>
        </member>
        <member name="P:DynamicParser.Registered.Right">
            <summary>
                Возвращает координату по оси X, являющуюся суммой значений свойств <see cref="P:System.Drawing.Rectangle.X" /> и
                <see cref="P:System.Drawing.Rectangle.Width" />.
            </summary>
        </member>
        <member name="P:DynamicParser.Registered.Bottom">
            <summary>
                Возвращает координату по оси Y, являющуюся суммой значений свойств <see cref="P:System.Drawing.Rectangle.Y" /> и
                <see cref="P:System.Drawing.Rectangle.Height" />.
            </summary>
        </member>
        <member name="M:DynamicParser.Registered.IsConflict(System.Drawing.Rectangle)">
            <summary>
                Выясняет, пересекается ли текущая область с указанной.
            </summary>
            <param name="rect">Проверяемая область.</param>
            <returns>Возвращает значение true в случае обнаружения пересечения, в противном случае - false.</returns>
        </member>
        <member name="T:DynamicParser.Region">
            <summary>
                Представляет регион, разделённый на области, ни одна из которых не пересекается с другой.
            </summary>
        </member>
        <member name="F:DynamicParser.Region._rects">
            <summary>
                Хранит области, индексируя их как (<see cref="P:DynamicParser.Region.Width" /> * y) + x.
            </summary>
        </member>
        <member name="M:DynamicParser.Region.#ctor(System.Int32,System.Int32)">
            <summary>
                Инициализирует регион с указанными параметрами ширины и высоты.
            </summary>
            <param name="width">Ширина региона.</param>
            <param name="height">Высота региона.</param>
        </member>
        <member name="P:DynamicParser.Region.Width">
            <summary>
                Ширина региона.
            </summary>
        </member>
        <member name="P:DynamicParser.Region.Height">
            <summary>
                Высота региона.
            </summary>
        </member>
        <member name="P:DynamicParser.Region.Elements">
            <summary>
                Получает коллекцию хранимых областей.
            </summary>
        </member>
        <member name="P:DynamicParser.Region.Count">
            <summary>
                Получает количество добавленных областей.
            </summary>
        </member>
        <member name="P:DynamicParser.Region.Rectangles">
            <summary>
                Получает коллекцию хранимых координат областей.
            </summary>
        </member>
        <member name="P:DynamicParser.Region.Item(System.Drawing.Point)">
            <summary>
                Получает область, на которую попадает указанная точка или null, если она не попадает ни на какую.
            </summary>
            <param name="pt">Заданная точка.</param>
            <returns>Возвращает область, на которую попадает указанная точка или null, если она не попадает ни на какую.</returns>
        </member>
        <member name="P:DynamicParser.Region.Item(System.Int32,System.Int32)">
            <summary>
                Получает область, на которую попадает указанная точка или null, если она не попадает ни на какую.
            </summary>
            <param name="x">Координата X.</param>
            <param name="y">Координата Y.</param>
            <returns>Возвращает область, на которую попадает указанная точка или null, если она не попадает ни на какую.</returns>
        </member>
        <member name="M:DynamicParser.Region.GetIndex(System.Int32,System.Int32)">
            <summary>
                Вычисляет индекс по формуле (<see cref="P:DynamicParser.Region.Width" /> * y) + x.
            </summary>
            <param name="x">Координата X.</param>
            <param name="y">Координата Y.</param>
            <returns>Возвращает индекс по формуле (<see cref="P:DynamicParser.Region.Width" /> * y) + x.</returns>
        </member>
        <member name="M:DynamicParser.Region.IsConflict(System.Drawing.Rectangle)">
            <summary>
                Определяет, перекрывается ли указанная область с какой-либо из содержащихся в текущем экземпляре.
            </summary>
            <param name="rect">Проверяемая область.</param>
            <returns>В случае, если области перекрываются, возвращает значение true, в противном случае - false.</returns>
        </member>
        <member name="M:DynamicParser.Region.Contains(System.String,System.Int32)">
            <summary>
                Уточняет, присутствует карта с указанным названием в текущем регионе или нет.
            </summary>
            <param name="processorName">Проверяемая карта.</param>
            <param name="index">Индекс, с которого необходимо начать выбор подстроки названия указанной карты.</param>
            <returns>
                Возвращает значение true в случае, если указанная карта присутствует в текущем регионе, в противном случае -
                false.
            </returns>
        </member>
        <member name="M:DynamicParser.Region.Add(System.Drawing.Rectangle,DynamicParser.Processor,System.Double)">
            <summary>
                Вставляет указанную область и карту в коллекцию.
            </summary>
            <param name="rect">Вставляемая область.</param>
            <param name="processor">Добавляемая карта.</param>
            <param name="percent">Процент соответствия добавляемой карты.</param>
        </member>
        <member name="M:DynamicParser.Region.Add(System.Int32,System.Int32,System.Int32,System.Int32,DynamicParser.Processor,System.Double)">
            <summary>
                Вставляет указанную область и карту в коллекцию.
            </summary>
            <param name="x">Координата X вставляемой области.</param>
            <param name="y">Координата Y вставляемой области.</param>
            <param name="width">Ширина вставляемой области.</param>
            <param name="height">Высота вставляемой области.</param>
            <param name="processor">Добавляемая карта.</param>
            <param name="percent">Процент соответствия добавляемой карты.</param>
        </member>
        <member name="M:DynamicParser.Region.Remove(System.Int32,System.Int32)">
            <summary>
                Удаляет область по указанным координатам.
            </summary>
            <param name="x">Координата X.</param>
            <param name="y">Координата Y.</param>
        </member>
        <member name="M:DynamicParser.Region.Clear">
            <summary>
                Удаляет все области из текущего объекта.
            </summary>
        </member>
        <member name="T:DynamicParser.ProcPerc">
            <summary>
                Содержит карты, отобранные по проценту соответствия в заданной точке.
            </summary>
        </member>
        <member name="F:DynamicParser.ProcPerc.Percent">
            <summary>
                Процент соответствия.
            </summary>
        </member>
        <member name="F:DynamicParser.ProcPerc.Procs">
            <summary>
                Карты.
            </summary>
        </member>
        <member name="F:DynamicParser.ProcPerc.Position">
            <summary>
                Точка.
            </summary>
        </member>
        <member name="T:DynamicParser.Reg">
            <summary>
                Содержит информацию о выбранной карте.
            </summary>
        </member>
        <member name="M:DynamicParser.Reg.#ctor(System.Drawing.Point)">
            <summary>
                Инициализирует структуру с заданной позицией.
            </summary>
            <param name="position">Позиция выбранной карты.</param>
        </member>
        <member name="F:DynamicParser.Reg.Percent">
            <summary>
                Процент соответствия выбранной карты.
            </summary>
        </member>
        <member name="F:DynamicParser.Reg.SelectedProcessor">
            <summary>
                Выбранная карта.
            </summary>
        </member>
        <member name="P:DynamicParser.Reg.Position">
            <summary>
                Координаты выбранной карты.
            </summary>
        </member>
        <member name="T:DynamicParser.RegionStatus">
            <summary>
                Отражает статус конкретного <see cref="T:DynamicParser.Region" /> при проверке на совместимость с другим.
            </summary>
        </member>
        <member name="F:DynamicParser.RegionStatus.Ok">
            <summary>
                Проверка прошла успешно.
            </summary>
        </member>
        <member name="F:DynamicParser.RegionStatus.Null">
            <summary>
                Указанный регион равен null.
            </summary>
        </member>
        <member name="F:DynamicParser.RegionStatus.WidthBig">
            <summary>
                Указанный регион шире текущего.
            </summary>
        </member>
        <member name="F:DynamicParser.RegionStatus.HeightBig">
            <summary>
                Указанный регион выше текущего.
            </summary>
        </member>
        <member name="T:DynamicParser.SearchResults">
            <summary>
                Хранит информацию о соответствии карт в конкретной точке.
            </summary>
        </member>
        <member name="F:DynamicParser.SearchResults.DiffEqual">
            <summary>
                Разница между процентами соответствия, позволяющая считать их равными.
            </summary>
        </member>
        <member name="F:DynamicParser.SearchResults._coords">
            <summary>
                Хранит информацию о картах и проценте их соответствия в данной точке.
            </summary>
        </member>
        <member name="M:DynamicParser.SearchResults.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Инициализирует экземпляр с заданными параметрами ширины и высоты.
            </summary>
            <param name="width">Ширина.</param>
            <param name="height">Высота.</param>
            <param name="mapWidth">Ширина обрабатываемых карт.</param>
            <param name="mapHeight">Высота обрабатываемых карт.</param>
        </member>
        <member name="P:DynamicParser.SearchResults.Width">
            <summary>
                Ширина.
            </summary>
        </member>
        <member name="P:DynamicParser.SearchResults.Height">
            <summary>
                Высота.
            </summary>
        </member>
        <member name="P:DynamicParser.SearchResults.ResultSize">
            <summary>
                Размер текущей карты.
            </summary>
        </member>
        <member name="P:DynamicParser.SearchResults.MapWidth">
            <summary>
                Ширина обрабатываемых карт.
            </summary>
        </member>
        <member name="P:DynamicParser.SearchResults.MapHeight">
            <summary>
                Высота обрабатываемых карт.
            </summary>
        </member>
        <member name="P:DynamicParser.SearchResults.MapSize">
            <summary>
                Размер обрабатываемых карт.
            </summary>
        </member>
        <member name="P:DynamicParser.SearchResults.Item(System.Int32,System.Int32)">
            <summary>
                Получает или задаёт информацию о картах в данной точке.
            </summary>
            <param name="x">Координата X.</param>
            <param name="y">Координата Y.</param>
            <returns>Возвращает информацию о картах в данной точке.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.FindRelation(System.Int32,System.Int32,System.String[])">
            <summary>
                Ищет возможность связывания указанных слов с полями <see cref="P:DynamicParser.Processor.Tag" /> найденных карт.
                Равносилен вызову метода <see cref="M:DynamicParser.SearchResults.FindRelation(System.String,System.Int32,System.Int32)" /> для каждого слова. Оптимизирован для
                многопоточного исполнения.
                Возвращает список слов, с которыми удалось установить связь, или null в случае ошибки или пустого исходного
                массива.
            </summary>
            <param name="words">Искомые слова.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <param name="count">Количество символов для выборки из названия карты, оно должно быть кратно длине искомого слова.</param>
            <returns>Возвращает список слов, с которыми удалось установить связь.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.FindRelation(System.Collections.ICollection,System.Int32,System.Int32)">
            <summary>
                Ищет возможность связывания указанных слов с полями <see cref="P:DynamicParser.Processor.Tag" /> найденных карт.
                Равносилен вызову метода <see cref="M:DynamicParser.SearchResults.FindRelation(System.String,System.Int32,System.Int32)" /> для каждого слова. Оптимизирован для
                многопоточного исполнения.
                Возвращает список слов, с которыми удалось установить связь, или null в случае ошибки или пустого исходного
                массива.
            </summary>
            <param name="words">Искомые слова.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <param name="count">Количество символов для выборки из названия карты, оно должно быть кратно длине искомого слова.</param>
            <returns>Возвращает список слов, с которыми удалось установить связь.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.FindRelation(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)">
            <summary>
                Ищет возможность связывания указанных слов с полями <see cref="P:DynamicParser.Processor.Tag" /> найденных карт.
                Равносилен вызову метода <see cref="M:DynamicParser.SearchResults.FindRelation(System.String,System.Int32,System.Int32)" /> для каждого слова. Оптимизирован для
                многопоточного исполнения.
                Возвращает список слов, с которыми удалось установить связь, или null в случае ошибки или пустого исходного
                массива.
            </summary>
            <param name="words">Искомые слова.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <param name="count">Количество символов для выборки из названия карты, оно должно быть кратно длине искомого слова.</param>
            <returns>Возвращает список слов, с которыми удалось установить связь.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.FindRelation(System.String,System.Int32,System.Int32)">
            <summary>
                Ищет возможность связывания указанного слова с полями <see cref="P:DynamicParser.Processor.Tag" /> найденных карт.
                Иными словами, отвечает на вопрос: "можно ли из имеющихся найденных карт составить искомое слово?".
                Возвращает значение true в случае нахождения слова, в противном случае - false.
            </summary>
            <param name="word">Искомое слово.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <param name="count">Количество символов для выборки из названия карты, оно должно быть кратно длине искомого слова.</param>
            <returns>Возвращает значение true в случае нахождения связи, в противном случае - false.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.GetWord(System.String,System.Int32)">
            <summary>
                Получает части слова указанной длины.
            </summary>
            <param name="word">Искомое слово.</param>
            <param name="length">Требуемое количество букв в подстроке.</param>
            <returns>Возвращает части слова указанной длины.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.FindWord(System.Collections.Generic.IList{DynamicParser.Reg},System.Int32,System.String,System.Int32)">
            <summary>
                Получает значение true в случае нахождения искомого слова, в противном случае - false.
            </summary>
            <param name="regs">Список обрабатываемых карт.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <param name="word">Искомое слово.</param>
            <param name="selectCount">
                Количество символов, которое необходимо выбрать из названия карты для поиска требуемого
                слова.
            </param>
            <returns>Возвращает <see cref="T:DynamicParser.WordSearcher" />, который позволяет выполнить поиск требуемого слова.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.GetStringFromRegion(DynamicParser.Region,System.Int32,System.Int32)">
            <summary>
                Генерирует <see cref="T:DynamicParser.WordSearcher" /> из <see cref="M:DynamicParser.Processor.GetProcessorName(System.Int32,System.Int32)" />.
            </summary>
            <param name="region"><see cref="T:DynamicParser.Region" />, из которого требуется получить <see cref="T:DynamicParser.WordSearcher" />.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <param name="count">Количество символов в строке <see cref="P:DynamicParser.Processor.Tag" /> карты.</param>
            <returns>
                Возвращает <see cref="T:DynamicParser.WordSearcher" /> из первых букв названия (<see cref="P:DynamicParser.Processor.Tag" />) объектов
                <see cref="T:DynamicParser.Region" />.
            </returns>
        </member>
        <member name="M:DynamicParser.SearchResults.FindSymbols(System.String,System.Int32)">
            <summary>
                Находит карты в результатах поиска, поля <see cref="P:DynamicParser.Processor.Tag" /> которых по указанной позиции соответствуют
                указанной строке.
            </summary>
            <param name="procName">Искомая строка.</param>
            <param name="startIndex">Индекс, начиная с которого будет сформирована строка названия карты.</param>
            <returns>Возвращает информацию о найденных картах.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.ChangeCount(System.Collections.Generic.IList{System.Int32},System.Int32)">
            <summary>
                Увеличивает значение старших разрядов счётчика букв, если это возможно.
                Если увеличение было произведено, возвращается номер позиции, на которой произошло изменение, в противном случае
                -1.
            </summary>
            <param name="count">Массив-счётчик.</param>
            <param name="maxCount">Максимальное значение счётчика.</param>
            <returns>Возвращается номер позиции, на которой произошло изменение, в противном случае -1.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.Find(System.Drawing.Rectangle)">
            <summary>
                Выполняет поиск наиболее подходящих карт в указанной области.
            </summary>
            <param name="rect">Область поиска карт.</param>
            <returns>Возвращает список наиболее подходящих карт в указанной области.</returns>
        </member>
        <member name="M:DynamicParser.SearchResults.RegionCorrect(DynamicParser.Region)">
            <summary>
                Определяет, есть ли какие-либо конфликты между заданным <see cref="T:DynamicParser.Region" /> и текущим.
            </summary>
            <param name="region">Проверяемый <see cref="T:DynamicParser.Region" />.</param>
            <returns>Возвращает <see cref="F:DynamicParser.RegionStatus.Ok" /> в случае отсутствия конфликтов.</returns>
        </member>
        <member name="T:DynamicParser.TagSearcher">
            <summary>
                Сравнивает две строки по количеству встречающихся букв в каждой строке.
            </summary>
        </member>
        <member name="F:DynamicParser.TagSearcher._dicCurrent">
            <summary>
                Счётчик количества каждой буквы в исходной строке.
            </summary>
        </member>
        <member name="M:DynamicParser.TagSearcher.#ctor(System.String)">
            <summary>
                Инициализирует класс <see cref="T:DynamicParser.TagSearcher" /> исходной строкой.
            </summary>
            <param name="str">Строка, с которой будет производиться сравнение.</param>
        </member>
        <member name="P:DynamicParser.TagSearcher.SourceString">
            <summary>
                Исходная строка.
            </summary>
        </member>
        <member name="M:DynamicParser.TagSearcher.IsEqual(System.String)">
            <summary>
                Получает значение, определяющее сходство между указанной строкой и текущей.
                Сравнение производится без учёта регистра.
            </summary>
            <param name="str">Сравниваемая строка.</param>
            <returns>Возвращает значение true в случае сходства строк, false в противном случае.</returns>
        </member>
        <member name="M:DynamicParser.TagSearcher.GetCount(System.String)">
            <summary>
                Получает счётчики количества попаданий каждой буквы.
                Буква является ключом в словаре, значение является количеством попаданий буквы, находящейся на этой позиции.
            </summary>
            <param name="str">Проверяемая строка.</param>
            <returns>Возвращает счётчики количества попаданий каждой буквы.</returns>
        </member>
        <member name="M:DynamicParser.TagSearcher.GetCount(System.Char)">
            <summary>
                Возвращает количество раз, которое встречается искомый символ в строке или ноль в случае отсутствия такового.
            </summary>
            <param name="ch">Искомый символ.</param>
            <returns>Возвращает количество раз, которое встречается искомый символ в строке или ноль в случае отсутствия такового.</returns>
        </member>
        <member name="T:DynamicParser.WordSearcher">
            <summary>
                Выполняет проверку соответствия слова указанной строке, состоящей из массива слов.
            </summary>
        </member>
        <member name="F:DynamicParser.WordSearcher._words">
            <summary>
                Содержит коллекцию слов, используемую для формирования заданного слова.
            </summary>
        </member>
        <member name="M:DynamicParser.WordSearcher.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
                Инициализирует текущий экземпляр указанной коллекцией слов.
                Создаёт список строк, в котором отсутствуют дублирующиеся и пустые значения.
                Отсев производится без учёта регистра.
            </summary>
            <param name="strs">Коллекция слов.</param>
        </member>
        <member name="P:DynamicParser.WordSearcher.Count">
            <summary>
                Получает количество слов в коллекции.
            </summary>
        </member>
        <member name="M:DynamicParser.WordSearcher.IsEqual(System.String)">
            <summary>
                Выполняет проверку соответствия слов, содержащихся в текущем экземпляре, с заданным словом.
                Проверка выполняется без учёта регистра.
            </summary>
            <param name="word">Проверяемое слово.</param>
            <returns>Возвращает значение true в случае, если соответствие обнаружено, в противном случае - false.</returns>
        </member>
        <member name="M:DynamicParser.WordSearcher.ChangeCount(System.Int32[])">
            <summary>
                Увеличивает значение старших разрядов счётчика букв, если это возможно.
                Если увеличение было произведено, возвращается номер позиции, на которой произошло изменение, в противном случае
                -1.
            </summary>
            <param name="count">Массив-счётчик.</param>
            <returns>Возвращается номер позиции, на которой произошло изменение, в противном случае -1.</returns>
        </member>
        <member name="M:DynamicParser.WordSearcher.GetWord(System.Collections.Generic.IList{System.Int32})">
            <summary>
                Генерирует слово из частей, содержащихся в коллекции, основываясь на данных счётчиков.
            </summary>
            <param name="count">Данные счётчиков по каждому слову.</param>
            <returns>Возвращает слово из частей, содержащихся в коллекции.</returns>
        </member>
    </members>
</doc>
